# Generated by Django 5.2 on 2025-10-30 18:07

from django.db import migrations


def populate_insurance_carriers(apps, schema_editor):
    """
    Populate InsuranceCarrier table with normalized carrier names
    from existing provider insurance_accepted data
    """
    InsuranceCarrier = apps.get_model('locations', 'InsuranceCarrier')

    # Normalized list of insurance carriers
    # Based on analysis of existing data in providers_v2.insurance_accepted
    carriers = [
        # Most common (>10% of providers)
        ('Private Pay', 'Private pay / out-of-pocket payment'),
        ('Regional Center', 'California Regional Center funding'),
        ('Medi-Cal', 'California Medicaid program'),

        # Major private insurance (5-15%)
        ('Blue Shield', 'Blue Shield of California'),
        ('Blue Cross', 'Blue Cross'),
        ('Blue Cross Blue Shield', 'Blue Cross Blue Shield'),
        ('Anthem', 'Anthem Blue Cross'),
        ('Anthem Blue Cross', 'Anthem Blue Cross (duplicate name handling)'),

        # Major national carriers (5-10%)
        ('Aetna', 'Aetna health insurance'),
        ('Kaiser Permanente', 'Kaiser Permanente HMO'),
        ('Cigna', 'Cigna health insurance'),
        ('United Healthcare', 'United Healthcare'),
        ('UHC', 'United Healthcare (abbreviation)'),

        # Behavioral health specialized (<5%)
        ('Magellan', 'Magellan Health behavioral health network'),
        ('Beacon', 'Beacon Health Options'),
        ('MHN', 'Managed Health Network'),
        ('Optum', 'Optum Behavioral Health'),
        ('United Behavioral Health', 'United Behavioral Health'),

        # California-specific
        ('L.A. Care', 'L.A. Care Health Plan'),
        ('CalOptima', 'CalOptima (Orange County)'),
        ('Molina', 'Molina Healthcare'),
        ('Molina Health Care', 'Molina Healthcare'),
        ('Health Net', 'Health Net'),
        ('Covered California', 'Covered California marketplace plans'),
        ('Inland Empire Health Plan', 'Inland Empire Health Plan'),

        # Government programs
        ('Medicare', 'Federal Medicare program'),
        ('Tricare', 'Military health insurance'),

        # Other
        ('The Holman Group', 'The Holman Group'),
        ('Self-determination programs', 'Self-determination programs'),
        ('Humana', 'Humana health insurance'),

        # Placeholder for unknown
        ('Other', 'Other insurance - call provider for details'),
        ('None', 'No insurance accepted or information unavailable'),
    ]

    created_count = 0
    for name, description in carriers:
        carrier, created = InsuranceCarrier.objects.get_or_create(
            name=name,
            defaults={'description': description}
        )
        if created:
            created_count += 1

    print(f'✅ Created {created_count} insurance carriers')


def reverse_populate(apps, schema_editor):
    """Reverse migration - delete all insurance carriers"""
    InsuranceCarrier = apps.get_model('locations', 'InsuranceCarrier')
    count = InsuranceCarrier.objects.count()
    InsuranceCarrier.objects.all().delete()
    print(f'🗑️  Deleted {count} insurance carriers')


class Migration(migrations.Migration):

    dependencies = [
        ('locations', '0026_delete_provider'),
    ]

    operations = [
        migrations.RunPython(populate_insurance_carriers, reverse_populate),
    ]
