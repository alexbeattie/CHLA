# Generated by Django 5.2 on 2025-10-27 16:20

from django.db import migrations
from django.core.management import call_command


def restore_zip_codes(apps, schema_editor):
    """
    Restore ZIP codes for all Regional Centers by reloading from fixture.
    This fixes the issue where deduplication kept empty records.
    """
    RegionalCenter = apps.get_model("locations", "RegionalCenter")

    # Clear all existing RCs
    deleted_count = RegionalCenter.objects.all().count()
    RegionalCenter.objects.all().delete()
    print(f"üóëÔ∏è  Deleted {deleted_count} existing Regional Center records")

    # Load fixture with complete ZIP code data
    call_command("loaddata", "regional_centers_with_zips.json", app_label="locations")

    new_count = RegionalCenter.objects.all().count()
    print(f"‚úÖ Loaded {new_count} Regional Center records with ZIP codes")

    # Verify LA County RCs
    la_count = RegionalCenter.objects.filter(is_la_regional_center=True).count()
    print(f"üìç LA County Regional Centers: {la_count}")

    # Show sample ZIP counts
    for rc in RegionalCenter.objects.filter(is_la_regional_center=True):
        zip_count = len(rc.zip_codes) if rc.zip_codes else 0
        print(f"  ‚Ä¢ {rc.regional_center}: {zip_count} ZIPs")


def reverse_restore(apps, schema_editor):
    """Cannot reverse - data would need to be restored from backup"""
    print("‚ö†Ô∏è  Cannot reverse ZIP code restoration")


class Migration(migrations.Migration):

    dependencies = [
        ("locations", "0019_deduplicate_all_regional_centers"),
    ]

    operations = [
        migrations.RunPython(restore_zip_codes, reverse_restore),
    ]
