# Generated by Django 5.2 on 2025-10-30 18:29

from django.db import migrations


def populate_postgis_location(apps, schema_editor):
    """
    Populate PostGIS location field from latitude/longitude
    Makes PostGIS the single source of truth for coordinates
    """
    ProviderV2 = apps.get_model('locations', 'ProviderV2')
    from django.contrib.gis.geos import Point
    from decimal import Decimal

    providers = ProviderV2.objects.all()
    updated = 0
    skipped = 0

    for provider in providers:
        # Skip if already has PostGIS location
        if provider.location:
            skipped += 1
            continue

        # Skip if no valid coordinates
        if not provider.latitude or not provider.longitude:
            skipped += 1
            continue

        # Skip zero coordinates
        if provider.latitude == Decimal('0.0') and provider.longitude == Decimal('0.0'):
            skipped += 1
            continue

        # Create PostGIS point from lat/lng
        provider.location = Point(
            float(provider.longitude),
            float(provider.latitude),
            srid=4326
        )
        provider.save()
        updated += 1

    print(f'‚úÖ Populated PostGIS location for {updated} providers')
    print(f'   Skipped {skipped} providers (already had location or invalid coords)')


def reverse_populate(apps, schema_editor):
    """Reverse migration - clear PostGIS location field"""
    ProviderV2 = apps.get_model('locations', 'ProviderV2')
    count = ProviderV2.objects.filter(location__isnull=False).count()
    ProviderV2.objects.update(location=None)
    print(f'üóëÔ∏è  Cleared PostGIS location for {count} providers')


class Migration(migrations.Migration):

    dependencies = [
        ('locations', '0028_populate_provider_insurance_relationships'),
    ]

    operations = [
        migrations.RunPython(populate_postgis_location, reverse_populate),
    ]
