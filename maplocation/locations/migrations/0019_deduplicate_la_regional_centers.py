# Generated by Django 5.2 on 2025-10-27 15:40

from django.db import migrations


def deduplicate_la_rcs(apps, schema_editor):
    """
    Remove duplicates - keep EXACTLY 7 LA County Regional Centers.
    For duplicates, keeps the one with the most ZIP codes.
    """
    RegionalCenter = apps.get_model("locations", "RegionalCenter")

    LA_COUNTY_REGIONAL_CENTERS = [
        "North Los Angeles County Regional Center",
        "Eastern Los Angeles Regional Center",
        "Frank D. Lanterman Regional Center",
        "Harbor Regional Center",
        "San Gabriel/Pomona Regional Center",
        "South Central Los Angeles Regional Center",
        "Westside Regional Center",
    ]

    total_deleted = 0

    for rc_name in LA_COUNTY_REGIONAL_CENTERS:
        rcs = list(RegionalCenter.objects.filter(regional_center=rc_name))

        if len(rcs) > 1:
            # Keep the one with the MOST ZIP codes
            rcs_with_zips = [
                (rc, len(rc.zip_codes) if rc.zip_codes else 0) for rc in rcs
            ]
            rcs_with_zips.sort(key=lambda x: (-x[1], x[0].id))
            keep = rcs_with_zips[0][0]
            duplicates = [rc for rc, _ in rcs_with_zips[1:]]

            zip_count = len(keep.zip_codes) if keep.zip_codes else 0
            print(f"  Keeping {rc_name} ID {keep.id} ({zip_count} ZIPs)")

            for dup in duplicates:
                dup_zip_count = len(dup.zip_codes) if dup.zip_codes else 0
                print(f"  Deleting duplicate ID {dup.id} ({dup_zip_count} ZIPs)")
                dup.delete()
                total_deleted += 1

    print(f"✨ Deleted {total_deleted} duplicate Regional Centers")

    final_count = RegionalCenter.objects.filter(is_la_regional_center=True).count()
    print(f"✅ Final count: {final_count} LA County Regional Centers")


def reverse_dedup(apps, schema_editor):
    """Cannot reverse deduplication - data is permanently deleted"""
    print("⚠️  Cannot reverse deduplication - deleted data is gone")


class Migration(migrations.Migration):

    dependencies = [
        ("locations", "0018_load_regional_center_data"),
    ]

    operations = [
        migrations.RunPython(deduplicate_la_rcs, reverse_dedup),
    ]
